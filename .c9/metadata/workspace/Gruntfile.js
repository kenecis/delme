{"changed":true,"filter":false,"title":"Gruntfile.js","tooltip":"/Gruntfile.js","value":"// Generated on 2015-03-10 using generator-angular 0.10.0\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n  // Load grunt tasks automatically\n  require('load-grunt-tasks')(grunt);\n\n  // Time how long tasks take. Can help when optimizing build times\n  require('time-grunt')(grunt);\n\n  // Configurable paths for the application\n  var appConfig = {\n    app: 'demo-app',\n    dist: 'dist'\n  };\n\n  // Define the configuration for all the tasks\n  grunt.initConfig({\n\n    // Project settings\n    yeoman: appConfig,\n\n    // Watches files for changes and runs tasks based on the changed files\n    watch: {\n      bower: {\n        files: ['bower.json'],\n        tasks: ['wiredep']\n      },\n      js: {\n        files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],\n        tasks: ['newer:jshint:all'],\n        options: {\n          livereload: '<%= connect.options.livereload %>'\n        }\n      },\n      jsTest: {\n        files: ['test/spec/{,*/}*.js'],\n        tasks: ['newer:jshint:test', 'karma']\n      },\n      styles: {\n        files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n        tasks: ['newer:copy:styles', 'autoprefixer']\n      },\n      gruntfile: {\n        files: ['Gruntfile.js']\n      },\n      livereload: {\n        options: {\n          livereload: '<%= connect.options.livereload %>'\n        },\n        files: [\n          '<%= yeoman.app %>/{,*/}*.html',\n          '.tmp/styles/{,*/}*.css',\n          '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n        ]\n      }\n    },\n\n    // The actual grunt server settings\n    connect: {\n      options: {\n        port: 9000,\n        // Change this to '0.0.0.0' to access the server from outside.\n        hostname: 'localhost',\n        livereload: 35729\n      },\n      livereload: {\n        options: {\n          open: true,\n          middleware: function (connect) {\n            return [\n              connect.static('.tmp'),\n              connect().use(\n                '/bower_components',\n                connect.static('./bower_components')\n              ),\n              connect.static(appConfig.app)\n            ];\n          }\n        }\n      },\n      test: {\n        options: {\n          port: 9001,\n          middleware: function (connect) {\n            return [\n              connect.static('.tmp'),\n              connect.static('test'),\n              connect().use(\n                '/bower_components',\n                connect.static('./bower_components')\n              ),\n              connect.static(appConfig.app)\n            ];\n          }\n        }\n      },\n      dist: {\n        options: {\n          open: true,\n          base: '<%= yeoman.dist %>'\n        }\n      }\n    },\n\n    // Make sure code styles are up to par and there are no obvious mistakes\n    jshint: {\n      options: {\n        jshintrc: '.jshintrc',\n        reporter: require('jshint-stylish')\n      },\n      all: {\n        src: [\n          'Gruntfile.js',\n          '<%= yeoman.app %>/scripts/{,*/}*.js'\n        ]\n      },\n      test: {\n        options: {\n          jshintrc: 'test/.jshintrc'\n        },\n        src: ['test/spec/{,*/}*.js']\n      }\n    },\n\n    // Empties folders to start fresh\n    clean: {\n      dist: {\n        files: [{\n          dot: true,\n          src: [\n            '.tmp',\n            '<%= yeoman.dist %>/{,*/}*',\n            '!<%= yeoman.dist %>/.git{,*/}*'\n          ]\n        }]\n      },\n      server: '.tmp'\n    },\n\n    // Add vendor prefixed styles\n    autoprefixer: {\n      options: {\n        browsers: ['last 1 version']\n      },\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/styles/',\n          src: '{,*/}*.css',\n          dest: '.tmp/styles/'\n        }]\n      }\n    },\n\n    // Automatically inject Bower components into the app\n    wiredep: {\n      app: {\n        src: ['<%= yeoman.app %>/index.html'],\n        ignorePath:  /\\.\\.\\//\n      }\n    },\n\n    // Renames files for browser caching purposes\n    filerev: {\n      dist: {\n        src: [\n          '<%= yeoman.dist %>/scripts/{,*/}*.js',\n          '<%= yeoman.dist %>/styles/{,*/}*.css',\n          '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}',\n          '<%= yeoman.dist %>/styles/fonts/*'\n        ]\n      }\n    },\n\n    // Reads HTML for usemin blocks to enable smart builds that automatically\n    // concat, minify and revision files. Creates configurations in memory so\n    // additional tasks can operate on them\n    useminPrepare: {\n      html: '<%= yeoman.app %>/index.html',\n      options: {\n        dest: '<%= yeoman.dist %>',\n        flow: {\n          html: {\n            steps: {\n              js: ['concat', 'uglifyjs'],\n              css: ['cssmin']\n            },\n            post: {}\n          }\n        }\n      }\n    },\n\n    // Performs rewrites based on filerev and the useminPrepare configuration\n    usemin: {\n      html: ['<%= yeoman.dist %>/{,*/}*.html'],\n      css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n      options: {\n        assetsDirs: ['<%= yeoman.dist %>','<%= yeoman.dist %>/images']\n      }\n    },\n\n    // The following *-min tasks will produce minified files in the dist folder\n    // By default, your `index.html`'s <!-- Usemin block --> will take care of\n    // minification. These next options are pre-configured if you do not wish\n    // to use the Usemin blocks.\n    // cssmin: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/styles/main.css': [\n    //         '.tmp/styles/{,*/}*.css'\n    //       ]\n    //     }\n    //   }\n    // },\n    // uglify: {\n    //   dist: {\n    //     files: {\n    //       '<%= yeoman.dist %>/scripts/scripts.js': [\n    //         '<%= yeoman.dist %>/scripts/scripts.js'\n    //       ]\n    //     }\n    //   }\n    // },\n    // concat: {\n    //   dist: {}\n    // },\n\n    imagemin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.{png,jpg,jpeg,gif}',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n\n    svgmin: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.app %>/images',\n          src: '{,*/}*.svg',\n          dest: '<%= yeoman.dist %>/images'\n        }]\n      }\n    },\n\n    htmlmin: {\n      dist: {\n        options: {\n          collapseWhitespace: true,\n          conservativeCollapse: true,\n          collapseBooleanAttributes: true,\n          removeCommentsFromCDATA: true,\n          removeOptionalTags: true\n        },\n        files: [{\n          expand: true,\n          cwd: '<%= yeoman.dist %>',\n          src: ['*.html', 'views/{,*/}*.html'],\n          dest: '<%= yeoman.dist %>'\n        }]\n      }\n    },\n\n    // ng-annotate tries to make the code safe for minification automatically\n    // by using the Angular long form for dependency injection.\n    ngAnnotate: {\n      dist: {\n        files: [{\n          expand: true,\n          cwd: '.tmp/concat/scripts',\n          src: ['*.js', '!oldieshim.js'],\n          dest: '.tmp/concat/scripts'\n        }]\n      }\n    },\n\n    // Replace Google CDN references\n    cdnify: {\n      dist: {\n        html: ['<%= yeoman.dist %>/*.html']\n      }\n    },\n\n    // Copies remaining files to places other tasks can use\n    copy: {\n      dist: {\n        files: [{\n          expand: true,\n          dot: true,\n          cwd: '<%= yeoman.app %>',\n          dest: '<%= yeoman.dist %>',\n          src: [\n            '*.{ico,png,txt}',\n            '.htaccess',\n            '*.html',\n            'views/{,*/}*.html',\n            'images/{,*/}*.{webp}',\n            'fonts/{,*/}*.*'\n          ]\n        }, {\n          expand: true,\n          cwd: '.tmp/images',\n          dest: '<%= yeoman.dist %>/images',\n          src: ['generated/*']\n        }, {\n          expand: true,\n          cwd: 'bower_components/bootstrap/dist',\n          src: 'fonts/*',\n          dest: '<%= yeoman.dist %>'\n        }]\n      },\n      styles: {\n        expand: true,\n        cwd: '<%= yeoman.app %>/styles',\n        dest: '.tmp/styles/',\n        src: '{,*/}*.css'\n      }\n    },\n\n    // Run some tasks in parallel to speed up the build process\n    concurrent: {\n      server: [\n        'copy:styles'\n      ],\n      test: [\n        'copy:styles'\n      ],\n      dist: [\n        'copy:styles',\n        'imagemin',\n        'svgmin'\n      ]\n    },\n\n    // Test settings\n    karma: {\n      unit: {\n        configFile: 'test/karma.conf.js',\n        singleRun: true\n      }\n    }\n  });\n\n\n  grunt.registerTask('serve', 'Compile then start a connect web server', function (target) {\n    if (target === 'dist') {\n      return grunt.task.run(['build', 'connect:dist:keepalive']);\n    }\n\n    grunt.task.run([\n      'clean:server',\n      'wiredep',\n      'concurrent:server',\n      'autoprefixer',\n      'connect:livereload',\n      'watch'\n    ]);\n  });\n\n  grunt.registerTask('server', 'DEPRECATED TASK. Use the \"serve\" task instead', function (target) {\n    grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n    grunt.task.run(['serve:' + target]);\n  });\n\n  grunt.registerTask('test', [\n    'clean:server',\n    'concurrent:test',\n    'autoprefixer',\n    'connect:test',\n    'karma'\n  ]);\n\n  grunt.registerTask('build', [\n    'clean:dist',\n    'wiredep',\n    'useminPrepare',\n    'concurrent:dist',\n    'autoprefixer',\n    'concat',\n    'ngAnnotate',\n    'copy:dist',\n    'cdnify',\n    'cssmin',\n    'uglify',\n    'filerev',\n    'usemin',\n    'htmlmin'\n  ]);\n\n  grunt.registerTask('default', [\n    'newer:jshint',\n    'test',\n    'build'\n  ]);\n};\n","undoManager":{"mark":44,"position":45,"stack":[[{"group":"doc","deltas":[{"start":{"row":19,"column":45},"end":{"row":19,"column":46},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":46},"end":{"row":19,"column":47},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":47},"end":{"row":19,"column":48},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":48},"end":{"row":19,"column":49},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":49},"end":{"row":19,"column":50},"action":"insert","lines":["-"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":50},"end":{"row":19,"column":51},"action":"insert","lines":[":"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":51},"end":{"row":19,"column":52},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":51},"end":{"row":19,"column":52},"action":"remove","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":50},"end":{"row":19,"column":51},"action":"remove","lines":[":"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["q"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["j"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["P"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["|"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":["|"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":9},"end":{"row":19,"column":10},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"remove","lines":["i"]}]}]]},"ace":{"folds":[],"scrolltop":138,"scrollleft":0,"selection":{"start":{"row":27,"column":4},"end":{"row":27,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":10,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1426363543459}